<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.elextec.persist.dao.mybatis.SysUserMapperExt" >
  <resultMap id="BaseResultMap" type="com.elextec.persist.model.mybatis.SysUser" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="user_mobile" property="userMobile" jdbcType="VARCHAR" />
    <result column="user_type" property="userType" jdbcType="VARCHAR" />
    <result column="user_icon" property="userIcon" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_real_name_auth_flag" property="userRealNameAuthFlag" jdbcType="VARCHAR" />
    <result column="user_pid" property="userPid" jdbcType="VARCHAR" />
    <result column="user_ic_front" property="userIcFront" jdbcType="VARCHAR" />
    <result column="user_ic_back" property="userIcBack" jdbcType="VARCHAR" />
    <result column="user_ic_group" property="userIcGroup" jdbcType="VARCHAR" />
    <result column="org_id" property="orgId" jdbcType="VARCHAR" />
    <result column="user_status" property="userStatus" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, login_name, user_mobile, user_type, user_icon, password, nick_name, user_name, 
    user_real_name_auth_flag, user_pid, user_ic_front, user_ic_back, user_ic_group, org_id, 
    user_status, create_user, create_time, update_user, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.elextec.persist.model.mybatis.SysUserExample" >
    <include refid="Pageable_Prefix" />
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="Pageable_Suffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sys_user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.elextec.persist.model.mybatis.SysUserExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sys_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.elextec.persist.model.mybatis.SysUser" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sys_user (id, login_name, user_mobile, 
      user_type, user_icon, password, 
      nick_name, user_name, user_real_name_auth_flag, 
      user_pid, user_ic_front, user_ic_back, 
      user_ic_group, org_id, user_status, 
      create_user, create_time, update_user, 
      update_time)
    values (#{id,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, #{userMobile,jdbcType=VARCHAR}, 
      #{userType,jdbcType=VARCHAR}, #{userIcon,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{userRealNameAuthFlag,jdbcType=VARCHAR}, 
      #{userPid,jdbcType=VARCHAR}, #{userIcFront,jdbcType=VARCHAR}, #{userIcBack,jdbcType=VARCHAR}, 
      #{userIcGroup,jdbcType=VARCHAR}, #{orgId,jdbcType=VARCHAR}, #{userStatus,jdbcType=VARCHAR}, 
      #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.elextec.persist.model.mybatis.SysUser" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="userMobile != null" >
        user_mobile,
      </if>
      <if test="userType != null" >
        user_type,
      </if>
      <if test="userIcon != null" >
        user_icon,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userRealNameAuthFlag != null" >
        user_real_name_auth_flag,
      </if>
      <if test="userPid != null" >
        user_pid,
      </if>
      <if test="userIcFront != null" >
        user_ic_front,
      </if>
      <if test="userIcBack != null" >
        user_ic_back,
      </if>
      <if test="userIcGroup != null" >
        user_ic_group,
      </if>
      <if test="orgId != null" >
        org_id,
      </if>
      <if test="userStatus != null" >
        user_status,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null" >
        #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="userIcon != null" >
        #{userIcon,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userRealNameAuthFlag != null" >
        #{userRealNameAuthFlag,jdbcType=VARCHAR},
      </if>
      <if test="userPid != null" >
        #{userPid,jdbcType=VARCHAR},
      </if>
      <if test="userIcFront != null" >
        #{userIcFront,jdbcType=VARCHAR},
      </if>
      <if test="userIcBack != null" >
        #{userIcBack,jdbcType=VARCHAR},
      </if>
      <if test="userIcGroup != null" >
        #{userIcGroup,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null" >
        #{userStatus,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.elextec.persist.model.mybatis.SysUserExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from sys_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.loginName != null" >
        login_name = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.userMobile != null" >
        user_mobile = #{record.userMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null" >
        user_type = #{record.userType,jdbcType=VARCHAR},
      </if>
      <if test="record.userIcon != null" >
        user_icon = #{record.userIcon,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null" >
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userRealNameAuthFlag != null" >
        user_real_name_auth_flag = #{record.userRealNameAuthFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.userPid != null" >
        user_pid = #{record.userPid,jdbcType=VARCHAR},
      </if>
      <if test="record.userIcFront != null" >
        user_ic_front = #{record.userIcFront,jdbcType=VARCHAR},
      </if>
      <if test="record.userIcBack != null" >
        user_ic_back = #{record.userIcBack,jdbcType=VARCHAR},
      </if>
      <if test="record.userIcGroup != null" >
        user_ic_group = #{record.userIcGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.orgId != null" >
        org_id = #{record.orgId,jdbcType=VARCHAR},
      </if>
      <if test="record.userStatus != null" >
        user_status = #{record.userStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_user
    set id = #{record.id,jdbcType=VARCHAR},
      login_name = #{record.loginName,jdbcType=VARCHAR},
      user_mobile = #{record.userMobile,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=VARCHAR},
      user_icon = #{record.userIcon,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_real_name_auth_flag = #{record.userRealNameAuthFlag,jdbcType=VARCHAR},
      user_pid = #{record.userPid,jdbcType=VARCHAR},
      user_ic_front = #{record.userIcFront,jdbcType=VARCHAR},
      user_ic_back = #{record.userIcBack,jdbcType=VARCHAR},
      user_ic_group = #{record.userIcGroup,jdbcType=VARCHAR},
      org_id = #{record.orgId,jdbcType=VARCHAR},
      user_status = #{record.userStatus,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.elextec.persist.model.mybatis.SysUser" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_user
    <set >
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null" >
        user_mobile = #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        user_type = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="userIcon != null" >
        user_icon = #{userIcon,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userRealNameAuthFlag != null" >
        user_real_name_auth_flag = #{userRealNameAuthFlag,jdbcType=VARCHAR},
      </if>
      <if test="userPid != null" >
        user_pid = #{userPid,jdbcType=VARCHAR},
      </if>
      <if test="userIcFront != null" >
        user_ic_front = #{userIcFront,jdbcType=VARCHAR},
      </if>
      <if test="userIcBack != null" >
        user_ic_back = #{userIcBack,jdbcType=VARCHAR},
      </if>
      <if test="userIcGroup != null" >
        user_ic_group = #{userIcGroup,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null" >
        user_status = #{userStatus,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.elextec.persist.model.mybatis.SysUser" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_user
    set login_name = #{loginName,jdbcType=VARCHAR},
      user_mobile = #{userMobile,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=VARCHAR},
      user_icon = #{userIcon,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_real_name_auth_flag = #{userRealNameAuthFlag,jdbcType=VARCHAR},
      user_pid = #{userPid,jdbcType=VARCHAR},
      user_ic_front = #{userIcFront,jdbcType=VARCHAR},
      user_ic_back = #{userIcBack,jdbcType=VARCHAR},
      user_ic_group = #{userIcGroup,jdbcType=VARCHAR},
      org_id = #{orgId,jdbcType=VARCHAR},
      user_status = #{userStatus,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="Pageable_Prefix" >
    <if test="pageBegin != null and pageSize !=null" >
      select * from ( 
    </if>
  </sql>
  <sql id="Pageable_Suffix" >
    <if test="pageBegin != null and pageSize !=null" >
       ) pageable_limited limit #{pageBegin} , #{pageSize}
    </if>
  </sql>
</mapper>